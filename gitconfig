[user]
  name = "Felix Crux"
  email = "felixc@felixcrux.com"

[core]
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  quotePath = false

[color]
  ui = auto

[init]
  defaultBranch = main

[diff]
  colorMoved = dimmed_zebra
  indentHeuristic = on

[help]
  autocorrect = 1

[fetch]
  prune = true

[pull]
  rebase = true

[push]
  default = current
  followTags = true

[transfer]
  fsckObjects = true

[merge]
  conflictstyle = diff3

[rebase]
  autosquash = true
  updateRefs = true

[rerere]
  enabled = true

[alias]
  co = checkout
  br = branch
  ls = log --graph --stat --date=format:'%a %b %d' \
       --pretty=format:'%C(yellow)%h %C(green)%cr (%cd) %C(blue)%aN%C(auto)%d%n%C(reset)%w(74,1,1)%B'
  lsp = !git ls --patch
  lst = log --tags --no-walk --date=format:'%a %b %d' \
       --pretty=format:'%C(yellow)%h %C(green)%cr (%cd) %C(blue)%aN%C(auto)%d%n%C(reset)%w(74,1,1)%B'
  amend = commit --amend --no-edit
  amend-msg = commit --amend
  amend-date-to = "!ad() { GIT_COMMITTER_DATE=\"${1}\" git commit --amend --no-edit --date=\"${1}\"; }; ad"
  amend-date-now = !GIT_COMMITTER_DATE=\"$(date)\" git commit --amend --no-edit --date=\"$(date)\"
  unstage = reset HEAD --
  it = !git init && git commit --allow-empty --message='Initial commit'
  up-pr = "!uppr() { if [ $(git symbolic-ref --short HEAD) = 'main' ]; then echo 'Not allowed on main branch!'; return; else git push --force --no-verify; fi; }; uppr"
  merge-pr = !"mergepr() { git checkout main && git pull && git checkout $1 && git rebase main && git checkout main && git merge $1 && git push --no-verify && git branch --delete $1 && git push --no-verify --delete origin $1; git fetch; }; mergepr"
